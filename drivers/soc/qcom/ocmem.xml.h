#ifndef OCMEM_XML
#define OCMEM_XML

/* Autogenerated file, DO NOT EDIT manually!

This file was generated by the rules-ng-ng headergen tool in this git repository:
http://github.com/freedreno/envytools/
git clone https://github.com/freedreno/envytools.git

The rules-ng-ng source files this header was generated from are:
- /home/robclark/src/freedreno/envytools/rnndb/adreno/ocmem.xml         (   1773 bytes, from 2015-09-24 17:30:00)

Copyright (C) 2013-2015 by the following authors:
- Rob Clark <robdclark@gmail.com> (robclark)

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice (including the
next paragraph) shall be included in all copies or substantial
portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE COPYRIGHT OWNER(S) AND/OR ITS SUPPLIERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/


enum ocmem_macro_state {
	PASSTHROUGH = 0,
	PERI_ON = 1,
	CORE_ON = 2,
	CLK_OFF = 4,
};

#define REG_OCMEM_HW_VERSION					0x00000000

#define REG_OCMEM_HW_PROFILE					0x00000004
#define OCMEM_HW_PROFILE_NUM_PORTS__MASK			0x0000000f
#define OCMEM_HW_PROFILE_NUM_PORTS__SHIFT			0
static inline uint32_t OCMEM_HW_PROFILE_NUM_PORTS(uint32_t val)
{
	return ((val) << OCMEM_HW_PROFILE_NUM_PORTS__SHIFT) & OCMEM_HW_PROFILE_NUM_PORTS__MASK;
}
#define OCMEM_HW_PROFILE_NUM_MACROS__MASK			0x00003f00
#define OCMEM_HW_PROFILE_NUM_MACROS__SHIFT			8
static inline uint32_t OCMEM_HW_PROFILE_NUM_MACROS(uint32_t val)
{
	return ((val) << OCMEM_HW_PROFILE_NUM_MACROS__SHIFT) & OCMEM_HW_PROFILE_NUM_MACROS__MASK;
}
#define OCMEM_HW_PROFILE_LAST_REGN_HALFSIZE			0x00010000
#define OCMEM_HW_PROFILE_INTERLEAVING				0x00020000

#define REG_OCMEM_GEN_STATUS					0x0000000c

#define REG_OCMEM_PSGSC_STATUS					0x00000038

static inline uint32_t REG_OCMEM_PSGSC(uint32_t i0) { return 0x0000003c + 0x1*i0; }

static inline uint32_t REG_OCMEM_PSGSC_CTL(uint32_t i0) { return 0x0000003c + 0x1*i0; }
#define OCMEM_PSGSC_CTL_MACRO0_MODE__MASK			0x00000007
#define OCMEM_PSGSC_CTL_MACRO0_MODE__SHIFT			0
static inline uint32_t OCMEM_PSGSC_CTL_MACRO0_MODE(enum ocmem_macro_state val)
{
	return ((val) << OCMEM_PSGSC_CTL_MACRO0_MODE__SHIFT) & OCMEM_PSGSC_CTL_MACRO0_MODE__MASK;
}
#define OCMEM_PSGSC_CTL_MACRO1_MODE__MASK			0x00000070
#define OCMEM_PSGSC_CTL_MACRO1_MODE__SHIFT			4
static inline uint32_t OCMEM_PSGSC_CTL_MACRO1_MODE(enum ocmem_macro_state val)
{
	return ((val) << OCMEM_PSGSC_CTL_MACRO1_MODE__SHIFT) & OCMEM_PSGSC_CTL_MACRO1_MODE__MASK;
}
#define OCMEM_PSGSC_CTL_MACRO2_MODE__MASK			0x00000700
#define OCMEM_PSGSC_CTL_MACRO2_MODE__SHIFT			8
static inline uint32_t OCMEM_PSGSC_CTL_MACRO2_MODE(enum ocmem_macro_state val)
{
	return ((val) << OCMEM_PSGSC_CTL_MACRO2_MODE__SHIFT) & OCMEM_PSGSC_CTL_MACRO2_MODE__MASK;
}
#define OCMEM_PSGSC_CTL_MACRO3_MODE__MASK			0x00007000
#define OCMEM_PSGSC_CTL_MACRO3_MODE__SHIFT			12
static inline uint32_t OCMEM_PSGSC_CTL_MACRO3_MODE(enum ocmem_macro_state val)
{
	return ((val) << OCMEM_PSGSC_CTL_MACRO3_MODE__SHIFT) & OCMEM_PSGSC_CTL_MACRO3_MODE__MASK;
}

#define REG_OCMEM_REGION_MODE_CTL				0x00001000
#define OCMEM_REGION_MODE_CTL_REG0_THIN				0x00000001
#define OCMEM_REGION_MODE_CTL_REG1_THIN				0x00000002
#define OCMEM_REGION_MODE_CTL_REG2_THIN				0x00000004
#define OCMEM_REGION_MODE_CTL_REG3_THIN				0x00000008

#define REG_OCMEM_GFX_MPU_START					0x00001004

#define REG_OCMEM_GFX_MPU_END					0x00001008


#endif /* OCMEM_XML */
